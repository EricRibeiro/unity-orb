description: >
  Simple drop-in job to build your Unity game.

parameters:
  step-name:
    type: string
    default: Run tests
    description: |
      Specify a custom step name for the test command, if desired.
  executor:
    type: executor
    description: |
      Pick an Executor to run the build job with.
  unity-username-var-name:
    type: env_var_name
    default: "UNITY_USERNAME"
    description: |
      Enter the name of the environment variable containing your Unity username.
  unity-password-var-name:
    type: env_var_name
    default: "UNITY_PASSWORD"
    description: |
      Enter the name of the environment variable containing your Unity password.
  unity-serial-var-name:
    type: env_var_name
    default: "UNITY_SERIAL"
    description: |
      Enter the name of the environment variable containing your Unity serial number.
      Required if you have a Plus or Pro license.
  unity-license-var-name:
    type: env_var_name
    default: "UNITY_ENCODED_LICENSE"
    description: |
      Enter the name of the environment variable containing your Unity license file encoded in base64.
      Required if you have a Personal license.
  project-path:
    type: string
    default: "."
    description: |
      Enter the path of your Unity project.
      This should be the directory that has an "Assets" folder inside it.
  test-platform:
    type: string
    default: "editmode"
    description: |
      Specify the test platform to run tests on.
      Valid values are "editmode", "playmode" and Unity's target builds.
      More information can be found on: https://docs.unity3d.com/Packages/com.unity.test-framework@2.0/manual/reference-command-line.html
  return-license:
    type: boolean
    default: false
    description: |
      Whether to return the license used to test the project.
      Unity only allows returning professional licenses.
  no_output_timeout:
    type: string
    default: "20m"
    description: Elapsed time the command can run without output.
  custom-parameters:
    type: string
    default: ""
    description: |
      Additional arguments for the Unity CLI.
      Use it to pass arguments to Unity's test options. Environment variables are supported.
      The parameters must be separated by space and must be in the format "-key value" or "-key" for booleans.
      Example: '-testFilter "MyNamespace.Something.MyTest" -assemblyNames "MyUnitTestAssembly" -testCategory "Unit;Integration"'.

executor: << parameters.executor >>

steps:
  - checkout
  - prepare-env:
      unity-username-var-name: << parameters.unity-username-var-name >>
      unity-password-var-name: << parameters.unity-password-var-name >>
      unity-serial-var-name: << parameters.unity-serial-var-name >>
      unity-license-var-name: << parameters.unity-license-var-name >>
      project-path: <<parameters.project-path>>
      no_output_timeout: << parameters.no_output_timeout>>
  - test:
      step-name: << parameters.step-name >>
      test-platform: << parameters.test-platform >>
      project-path: << parameters.project-path >>
      no_output_timeout: << parameters.no_output_timeout>>
      custom-parameters: << parameters.custom-parameters >>
  - when:
      condition: <<parameters.return-license>>
      steps:
        - return-license:
            unity-username-var-name: << parameters.unity-username-var-name >>
            unity-password-var-name: << parameters.unity-password-var-name >>
