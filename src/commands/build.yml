description: >
  This command builds an Unity project.

parameters:
  unity-username-var-name:
    type: env_var_name
    default: "UNITY_USERNAME"
    description: |
      Enter the name of the environment variable containing your Unity username.
      This is only necessary if you have a Plus or Pro license.
  unity-password-var-name:
    type: env_var_name
    default: "UNITY_PASSWORD"
    description: |
      Enter the name of the environment variable containing your Unity password.
      This is only necessary if you have a Plus or Pro license.
  unity-serial-var-name:
    type: env_var_name
    default: "UNITY_SERIAL"
    description: |
      Enter the name of the environment variable containing your Unity serial number.
      This is only necessary if you have a Plus or Pro license.
  step-name:
    type: string
    default: Build the project
    description: |
      Specify a custom step name for this command, if desired.
  project-path:
    type: string
    default: "."
    description: |
      Enter the relative path of your Unity project.
      This should be the directory that has an "Assets" folder inside it.
  build-target:
    type: string
    description: |
      The target platform of your build.
      Accepted arguments vary with Unity's version and can be found in the docs: https://docs.unity3d.com/2021.2/Documentation/ScriptReference/BuildTarget.html
  build-name:
    type: string
    default: "UnityBuild"
    description: |
      Enter the name for this build.
  cache-version:
    type: string
    default: "v1"
    description: |
      Change the default cache version if you need to clear the cache for any reason.
  include-branch-in-cache-key:
      type: boolean
      default: true
      description: >
          If true, this cache bucket will only apply to jobs within the same branch.
  compress:
    type: boolean
    default: true
    description: |
      Whether to compress the build output to a ".tar.gz" archive.
      This is recommended if you want to download the built artifacts from the GameCI dashboard.
      If left to "false" for decompressed WebGL builds, the built project can be run directly from the GameCI dashboard.

steps:
  - restore_cache:
      keys:
        - unity-deps-{{ arch }}-<< parameters.cache-version >>-<<# parameters.include-branch-in-cache-key >>{{ .Branch }}-<</ parameters.include-branch-in-cache-key >>{{ checksum "<< parameters.project-path >>/Packages/packages-lock.json" }}
        - unity-deps-{{ arch }}-<< parameters.cache-version >>-<<# parameters.include-branch-in-cache-key >>{{ .Branch }}<</ parameters.include-branch-in-cache-key >>
  - run:
      name: << parameters.step-name >>
      environment:
        PARAM_UNITY_USERNAME_VAR_NAME: << parameters.unity-username-var-name >>
        PARAM_UNITY_PASSWORD_VAR_NAME: << parameters.unity-password-var-name >>
        PARAM_UNITY_SERIAL_VAR_NAME: << parameters.unity-serial-var-name >>
        PARAM_BUILD_NAME: << parameters.build-name >>
        PARAM_BUILD_TARGET: << parameters.build-target >>
        PARAM_PROJECT_PATH: << parameters.project-path >>
        PARAM_COMPRESS: << parameters.compress >>
        SCRIPT_BUILD_WINDOWS: << include(scripts/windows/build-windows.sh) >>
        SCRIPT_BUILD_LINUX: << include(scripts/linux/build-linux.sh) >>
      command: << include(scripts/build.sh) >>
  - save_cache:
      key: unity-deps-{{ arch }}-<< parameters.cache-version >>-<<# parameters.include-branch-in-cache-key >>{{ .Branch }}-<</ parameters.include-branch-in-cache-key >>{{ checksum "<< parameters.project-path >>/Packages/packages-lock.json" }}
      paths:
        - << parameters.project-path >>/Library/
  - when:
      condition: << parameters.compress >>
      steps:
        - store_artifacts:
            path: << parameters.build-name >>-<< parameters.build-target >>.tar.gz
  - unless:
      condition: << parameters.compress >>
      steps:
        - store_artifacts:
            path: << parameters.project-path >>/Builds/<< parameters.build-target >>
