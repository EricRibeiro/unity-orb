version: 2.1
orbs:
  unity: game-ci/unity@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.1

filters: &filters
  tags:
    only: /.*/

jobs:
  build-il2cpp:
    description: >
      Simple drop-in job to build your Unity game.

    parameters:
      step-name:
        type: string
        default: Build the project
        description: |
          Specify a custom step name for the build command, if desired.
      executor:
        type: executor
        description: |
          Pick an Executor to run the build job with.
      unity-username-var-name:
        type: env_var_name
        default: "UNITY_USERNAME"
        description: |
          Enter the name of the environment variable containing your Unity username.
          This is only necessary if you have a Plus or Pro license.
      unity-password-var-name:
        type: env_var_name
        default: "UNITY_PASSWORD"
        description: |
          Enter the name of the environment variable containing your Unity password.
          This is only necessary if you have a Plus or Pro license.
      unity-serial-var-name:
        type: env_var_name
        default: "UNITY_SERIAL"
        description: |
          Enter the name of the environment variable containing your Unity serial number.
          This is only necessary if you have a Plus or Pro license.
      unity-license-var-name:
        type: env_var_name
        default: "UNITY_ENCODED_LICENSE"
        description: |
          Enter the name of the environment variable containing your Unity license file encoded in base64.
          A different license must be provided for every Unity major version.
          This is only necessary if you have a Personal license.
      project-path:
        type: string
        default: "."
        description: |
          Enter the path of your Unity project.
          This should be the directory that has an "Assets" folder inside it.
      build-target:
        type: string
        description: |
          The target platform of your build.
          Accepted arguments vary with Unity's version and can be found in the docs: https://docs.unity3d.com/2022.2/Documentation/ScriptReference/BuildTarget.html
      build-name:
        type: string
        default: "UnityBuild"
        description: |
          Enter the name for this build.
      compress:
        type: boolean
        default: true
        description: |
          Whether to compress the build output to a ".tar.gz" archive.
          This is recommended if you want to download the build artifacts from the GameCI dashboard.
          If left to "false" for decompressed WebGL builds, the built project can be run directly from the GameCI dashboard.

    executor: << parameters.executor >> 

    steps:
      - run:
          name: "Clone CircleCI demo repository"
          command: |
            git clone https://github.com/EricRibeiro/Unity2D-Demo-Game-CI-CD.git
            cd Unity2D-Demo-Game-CI-CD
            git fetch --all
            git checkout windows-il2cpp
      - unity/prepare-env:
          unity-username-var-name: << parameters.unity-username-var-name >>
          unity-password-var-name: << parameters.unity-password-var-name >>
          unity-serial-var-name: << parameters.unity-serial-var-name >>
          unity-license-var-name: << parameters.unity-license-var-name >>
          project-path: <<parameters.project-path>>
      - unity/build:
          step-name: << parameters.step-name >>
          build-name: <<parameters.build-name>>
          build-target: <<parameters.build-target>>
          project-path: <<parameters.project-path>>
          compress: <<parameters.compress>>
  
  build-mono:
    description: >
      Simple drop-in job to build your Unity game.

    parameters:
      step-name:
        type: string
        default: Build the project
        description: |
          Specify a custom step name for the build command, if desired.
      executor:
        type: executor
        description: |
          Pick an Executor to run the build job with.
      unity-username-var-name:
        type: env_var_name
        default: "UNITY_USERNAME"
        description: |
          Enter the name of the environment variable containing your Unity username.
          This is only necessary if you have a Plus or Pro license.
      unity-password-var-name:
        type: env_var_name
        default: "UNITY_PASSWORD"
        description: |
          Enter the name of the environment variable containing your Unity password.
          This is only necessary if you have a Plus or Pro license.
      unity-serial-var-name:
        type: env_var_name
        default: "UNITY_SERIAL"
        description: |
          Enter the name of the environment variable containing your Unity serial number.
          This is only necessary if you have a Plus or Pro license.
      unity-license-var-name:
        type: env_var_name
        default: "UNITY_ENCODED_LICENSE"
        description: |
          Enter the name of the environment variable containing your Unity license file encoded in base64.
          A different license must be provided for every Unity major version.
          This is only necessary if you have a Personal license.
      project-path:
        type: string
        default: "."
        description: |
          Enter the path of your Unity project.
          This should be the directory that has an "Assets" folder inside it.
      build-target:
        type: string
        description: |
          The target platform of your build.
          Accepted arguments vary with Unity's version and can be found in the docs: https://docs.unity3d.com/2022.2/Documentation/ScriptReference/BuildTarget.html
      build-name:
        type: string
        default: "UnityBuild"
        description: |
          Enter the name for this build.
      compress:
        type: boolean
        default: true
        description: |
          Whether to compress the build output to a ".tar.gz" archive.
          This is recommended if you want to download the build artifacts from the GameCI dashboard.
          If left to "false" for decompressed WebGL builds, the built project can be run directly from the GameCI dashboard.

    executor: << parameters.executor >> 

    steps:
      - run:
          name: "Clone CircleCI demo repository"
          command: |
            git clone https://github.com/EricRibeiro/Unity2D-Demo-Game-CI-CD.git
      - unity/prepare-env:
          unity-username-var-name: << parameters.unity-username-var-name >>
          unity-password-var-name: << parameters.unity-password-var-name >>
          unity-serial-var-name: << parameters.unity-serial-var-name >>
          unity-license-var-name: << parameters.unity-license-var-name >>
          project-path: <<parameters.project-path>>
      - unity/build:
          unity-username-var-name: << parameters.unity-username-var-name >>
          unity-password-var-name: << parameters.unity-password-var-name >>
          unity-serial-var-name: << parameters.unity-serial-var-name >>
          step-name: << parameters.step-name >>
          build-name: <<parameters.build-name>>
          build-target: <<parameters.build-target>>
          project-path: <<parameters.project-path>>
          compress: <<parameters.compress>>

executors:
  windows-runner:
    machine: true
    resource_class: ericribeiro/unity-runner

workflows:
  test-build:
    jobs:
      - build-mono:
          name: "build-Windows64-mono"
          step-name: "Build StandaloneWindows64"
          unity-license-var-name: "UNITY_ENCODED_LICENSE_2021"
          executor:
              name: "unity/ubuntu-2021"
              target-platform: "windows-mono"
              resource-class: "medium"
          project-path: "Unity2D-Demo-Game-CI-CD/src"
          build-target: "StandaloneWindows64"
          filters: *filters
          context: orb-testing-unity
      - build-il2cpp:
          name: "build-Windows64-il2cpp"
          step-name: "Build StandaloneWindows64 il2cpp"
          unity-serial-var-name: "UNITY_SERIAL_2021"
          unity-username-var-name: "UNITY_USERNAME"
          unity-password-var-name: "UNITY_PASSWORD"
          executor:
              name: "windows-runner"
          project-path: "Unity2D-Demo-Game-CI-CD/src"
          build-target: StandaloneWindows64
          compress: true
          filters: *filters
          context: orb-testing-unity
      # - build-mono:
      #     name: "build-android"
      #     step-name: "Build Android"
      #     unity-license-var-name: "UNITY_ENCODED_LICENSE_2021"
      #     executor:
      #       name: "unity/ubuntu-2021"
      #       target-platform: "android"
      #       resource-class: "large"
      #     project-path: "Unity2D-Demo-Game-CI-CD/src"
      #     build-target: "Android"
      #     filters: *filters
      #     context: orb-testing-unity
      - orb-tools/pack:
          filters: *filters
      - orb-tools/publish:
          orb-name: game-ci/unity
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - orb-tools/pack
            # - build-Windows64-mono
            - build-Windows64-il2cpp
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/